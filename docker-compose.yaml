version: '3'

services:
  base: &base
    build:
      context: .
      dockerfile: Dockerfile  # Usando o Dockerfile que copia seu código local
    env_file: .env
    volumes:
      - /data/storage:/app/storage
     # - .:/app  # O código-fonte local sendo usado no container
    restart: always

  rails:
    <<: *base
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    restart: always

  sidekiq:
    <<: *base
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
    restart: always

  vite_build:
    <<: *base
    build:
      context: .
      dockerfile: ./docker/dockerfiles/vite.Dockerfile  # Certifique-se de que este Dockerfile existe
    image: chatwoot-vite:development
    working_dir: /app
    volumes:
      - ./:/app:delegated
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - cache:/app/tmp/cache
      - bundle:/usr/local/bundle
    entrypoint: sh -c "pnpm install && pnpm build:sdk"

volumes:
  node_modules:
  packs:
  cache:
  bundle:
